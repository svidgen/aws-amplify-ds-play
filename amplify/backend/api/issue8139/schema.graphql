type Order
  @model
  # @key(name: "byStore", fields: ["storeID"])
  # @auth(rules: [{allow: private, operations: [read, update, create, delete]}])
{
  id: ID!
  buyer_name: String
  order_total_amount: String
  products: [OrderProducts] @connection(keyName: "byOrder", fields: ["id"])
  created_at: AWSTimestamp
}

type OrderProducts
  @model
  @key(name: "byOrder", fields:["orderID", "productID"])
  @key(name: "byProduct", fields:["productID", "orderID"])
  # @auth(rules: [{allow: private, operations: [read, update, create, delete]}])
{
  id: ID!
  orderID: ID!
  productID: ID!
  order: Order! @connection(fields: ["orderID"])
  product: Product! @connection(fields: ["productID"])
}

type Product
  @model
  # @key(name: "byStore", fields: ["storeID"])
  # @auth(rules: [{allow: owner, operations: [create, update, delete]}, {allow: public, provider: iam, operations: [read]}])
{
  id: ID!
  product_name: String!
  product_price: String!
  created_at: AWSTimestamp
  orders: [OrderProducts] @connection(keyName: "byProduct", fields:["id"])
}